# int(x, base = 10) # возвращает целочисленный объект
# base - (от 2 до 36) основание системы счисления, мы используем 10 (десятичную)
# 36 - чная система счисления - 10 цифр + 26 букв алфавита.

# bin(x)
# oct(x)
# hex(x)
# преобразуют целое число в двоичную, восьмеричную или шестнадцатиричную систему счисления
# соответственно, с префиксами '0b', '0o', '0x'.

# x = int('42')
# y = int(3.415)
# z = int('hello', base = 36) # 10-чная даст ошибку, там нет букв, а цифры 0 - 9
# print(x, y, z, sep='\n')

# 42
# 3
# 29234652

# РЕЗИНОВЫЙ IN

# импорт модулей вызываем в начале кода, после оставляем пару пустых строк
# import sys

# STEP = 2 ** 16 # 2 байта
# num = 1
# for _ in range(30): # переменная в самом теле цикла не используется, поэтому ее не именуем, а назначаем '_'
#     print(sys.getsizeof(num), num)
#     num *= STEP
# функция возвращает размер объекта в байтах, после это число умножается на соответствющий шаг   

# !!!!!!!
# num = 7_901_123_456_789 
# print(num) # 7901123456789
# num = 7901123456789
# print(num) # 7901123456789
# одно и то же, нижнее подчеркивание программа игнорирует, нужно для удобства визуального восприятия

# num = 2 ** 16 - 1
# b = bin(num)
# o = oct(num)
# h = hex(num)
# print(b, o, h)
# # 0b1111111111111111 0o177777 0xffff - строки

# ВЕЩЕСТВЕННЫЕ ЧИСЛА - float(x)

# print(0.1 + .2) # 0.30000000000000004
# pi = 3.141_592_653_589_793_238_462_643_383 
# print(pi) # 3.141592653589793 - вышло не все число, обрезается

# ЛОГИЧЕСКИЕ ТИПЫ - bool(x)
# в пайтон считается, что ЯВНОЕ ЛУЧШЕ НЕЯВНОГО, но иногда используют неявные 
# преобразования с логическим типом

# 1) КАКОЙ-ТО ОБЪЕКТ ИЛИ ОБЪЕКТ ПО УМОЛЧАНИЮ
# DEFAULT = 42
# num = int(input('Введите уровень или ноль для значения по умолчанию: '))
# level = num or DEFAULT
# print(level)

# если вводим число(например, 80), то получаем 80. Т.к. вспоминаем ленивый if: т.е. при использовании
# оператора OR если первое условие равно True, то дальше не проверяем и не идем. По умолчанию любое число 
# (не ноль) = True, а 0 = False). Т.о если введем 0, то num = 0, значит False, пропускаем его и level = DEFAULT. 
# В этом случае print(level) выведет 42

# 2) используем то, пустая строка = false

name = input('Как вас зовут? ')
if name:
    print('Привет, ' + name)
else:
    print('Анонимус, приветствую')
    
# Если пользователь не ввел ничего, input передал пустую строку ''. Пустая строка по умолчанию = False, т.о условие if не срабатывает, 
# а срабатывает else

# 3) при работе с КОЛЛЕКЦИЯМИ: любая коллекция с элементами = True, любая пустая коллекция = False/

data = [0, 1, 1, 2, 3, 5, 8, 13, 21]
while data:
    print(data.pop()) 

# возвращает список, удаляя последний элемент. В какой-то момент элементы закончатся, останется пустой список (=False)
# и цикл остановится

   


