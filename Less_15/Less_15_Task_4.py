"""
üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: ‚Äú1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è‚Äù, ‚Äú3-—è —Å—Ä–µ–¥–∞ –º–∞—è‚Äù –∏ —Ç.–ø.
üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–≥–æ –≤ –¥–∞—Ç—É –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É.
üìå –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.
"""
from datetime import datetime

import logging

logging.basicConfig(level=logging.INFO, filename="file.log", encoding="utf-8")
logger = logging.getLogger(__name__)

MONTHS = [
    "   ",
    "—è–Ω–≤",
    "—Ñ–µ–≤",
    "–º–∞—Ä",
    "–∞–ø—Ä",
    "–º–∞—è",
    "–∏—é–Ω",
    "–∏—é–ª",
    "–∞–≤–≥",
    "—Å–µ–Ω",
    "–æ–∫—Ç",
    "–Ω–æ—è",
    "–¥–µ–∫",
]
WEEKDAYS = ["–ø–æ–Ω", "–≤—Ç–æ", "—Å—Ä–µ", "—á–µ—Ç", "–ø—è—Ç", "—Å—É–±", "–≤–æ—Å"]


def transf_date(text: str):
    try:
        num, weekday, month = text.split()
        num = int(num[0])
        weekday = WEEKDAYS.index(weekday[:3])
        month = MONTHS.index(month[:3])
        count = 0
    except ValueError as e:
        logger.error(f"–≤ —Ç–µ–∫—Å—Ç–µ {text} –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞")
        return None

    for day in range(1, 32):
        date = datetime(day=day, month=month, year=datetime.now().year)
        if date.weekday() == weekday:
            count += 1
            if count == num:
                logger.info(f"–ü–æ–ª—É—á–∏–ª–∏ —Ç–µ–∫—Å—Ç {text}. –†–µ–∑—É–ª—å—Ç–∞—Ç - –¥–∞—Ç–∞ {date}")
                return date
    logger.error(f"–î–∞—Ç–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä {num}")


print(transf_date("1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è"))
print(transf_date(" 7-—è —Å—Ä–µ–¥–∞ –º–∞—è"))
