"""
üìå –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö —Å–µ–º–∏–Ω–∞—Ä–æ–≤.
üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É 
    –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏ –≤—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π(–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö).
üìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã —Å–≤–æ–π—Å—Ç–≤.
"""

class Rectangle:
    
    def __init__(self, lenght, width=None):
        self._lenght = abs(lenght)
        if not width:
            self._width = abs(lenght)
        else:
            self._width = abs(width)
            
    @property
    def width(self):
        return self._width
    
    @property
    def lenght(self):
        return self._lenght
    
    @width.setter
    def width(self, value):
        self._width = abs(value)
        
    @lenght.setter
    def lenght(self, value):
        self._lenght = abs(value)
            
    def perimeter(self):
        return (self._lenght + self._width) * 2
    
    def square(self):
        return self._lenght * self._width
    
    def __add__(self, other):
        return Rectangle(self.perimeter() + other.perimeter())
    
    def __sub__(self, other):
        return Rectangle(abs(self.perimeter() - other.perimeter()))
        
r = Rectangle(-3, 4)
# r.width = -6
# r.lenght = -2
r.width = 25
print(r.width)
print(r.lenght)
