# Напишите программу, которая решает квадратные уравнения
# даже если дискриминант отрицательный.
# Используйте комплексные числа для извлечения квадратного корня.

import math

a = float(input('Ввод a: '))
b = float(input('Ввод b: '))
c = float(input('Ввод c: '))

def diskrim(a,b,c): # функция расчета дискриминанта
    
    return pow(b,2) - 4 * a * c   # pow(b, 2) аналогично b**2
    
# print(f'дискриминант равен = {diskrim(a,b,c)}')

dis = diskrim(a,b,c) # вызываем фукнцию расчета дискриминанта
print(dis)

sq_root = pow(diskrim(a,b,c), 0.5) # находим квадратный корень дискриминанта

if dis > 0:
    print((-b + sq_root) / (2 * a)) 
    print((-b - sq_root) / (2 * a))
elif dis == 0:
    print((-b -sq_root) / (2 * a))  # фактически, формула -b / 2*a, т.к. корень 0 - ноль.
else: # при отрицательном дискриминанте уравнение не имеет действительных корней, но Питон по умолчанию считает
      # в этом случае в комплексных числах (когда есть мнимая единица, которая позволяет брать корень из отрицательного числа)
    print((-b + sq_root) / (2 * a))
    print((-b - sq_root) / (2 * a))

# Ввод a: 1
# Ввод b: 0
# Ввод c: 30
# -120.0
# (3.353833384347519e-16+5.477225575051661j)
# (-3.353833384347519e-16-5.477225575051661j)   

# Ввод a: -5
# Ввод b: -12
# Ввод c: 3
# 204.0
# -2.62828568570857
# 0.22828568570857008

# Ввод a: 16
# Ввод b: -8
# Ввод c: 1
# 0.0
# 0.25

   





